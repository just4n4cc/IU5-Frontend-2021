{"version":3,"sources":["components/Todo/Todo.js","components/Todone/Todone.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","className","title","type","onClick","onClickCheckBox","checked","labelKey","onClickLabel","Todone","currentIndex","App","React","useState","todos","setTodo","todones","setTodone","addLabel","setAddLabel","AddLabel","defaultValue","placeholder","onKeyDown","e","handleAddKeyDown","autoFocus","code","target","value","alert","console","log","map","index","filter","val","handleTodoCheckBoxClick","parseInt","length","innerText","handleOnClickLabel","handleTodoneCheckBoxClick","handleOnDoubleClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57beb444.chunk.js","sourcesContent":["import './Todo.css';\r\n\r\nexport function Todo(props) {\r\n    return (\r\n      <div className=\"Todo\">\r\n        <input title={props.title} type=\"checkbox\" onClick={props.onClickCheckBox} checked={false} ></input>\r\n        <label title={props.labelKey} onClick={props.onClickLabel}>{props.title}</label>\r\n      </div>\r\n    );\r\n  }","import './Todone.css';\r\n\r\nexport function Todone(props) {\r\n    return (\r\n      <div className=\"Todone\">\r\n        <input title={props.title} type=\"checkbox\" checked=\"true\" onClick={props.onClickCheckBox}></input>\r\n        <label onClick={props.onClickLabel}><s>{props.title}</s></label>\r\n      </div>\r\n    );\r\n  }","import React from 'react'\r\nimport './App.css';\r\nimport {Todo} from './components/Todo/Todo'\r\nimport {Todone} from './components/Todone/Todone'\r\n\r\nlet currentIndex = -1;\r\n\r\nfunction App() {\r\n  const [todos, setTodo] = React.useState([]);\r\n  const [todones, setTodone] = React.useState([]);\r\n  const [addLabel, setAddLabel] = React.useState(['']);\r\n  function AddLabel(props) {\r\n    return (\r\n      <input type=\"text\" defaultValue={props.title} placeholder=\"Add new tododo here!\" onKeyDown={(e) => handleAddKeyDown(e)} autoFocus/>\r\n    );\r\n  } \r\n  function handleTodoCheckBoxClick(e) {\r\n    setTodone([...todones, e.target.title]);\r\n    setTodo(todos.filter((val)=> val !== e.target.title));\r\n  }\r\n\r\n  function handleOnClickLabel(e) {\r\n    currentIndex = parseInt(e.target.title[e.target.title.length - 1]);\r\n    setAddLabel(e.target.innerText);\r\n  }\r\n\r\n  function handleTodoneCheckBoxClick(e) {    \r\n    setTodo([...todos, e.target.title]);\r\n    setTodone(todones.filter((val) => val !== e.target.title));\r\n  }\r\n  function handleOnDoubleClick(e) {\r\n    setTodone(todones.filter((val)=> val !== e.target.innerText));\r\n  }\r\n  const handleAddKeyDown = (e) => {\r\n    if (e.code === \"Enter\") {\r\n      if (e.target.value === \"\") {\r\n        alert(\"Dodo not dodo empty tododo\");\r\n        return;\r\n      }\r\n      console.log(e.target.value);\r\n      console.log(currentIndex);\r\n      if (currentIndex === -1) {\r\n      setTodo([...todos, e.target.value]);\r\n      } else {\r\n        console.log(e.target.value);\r\n        console.log(currentIndex);\r\n        todos[currentIndex] = e.target.value;\r\n        currentIndex = -1;\r\n        setTodo([...todos]);\r\n        setAddLabel('');\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h2>Tododo</h2>\r\n      </header>\r\n      <div className=\"Main\">\r\n        <div className=\"Frame\">\r\n          {\r\n            todos.map((title, index) => (\r\n              // <TodoTest key={\"Todo\" + index} title={title} onClickCheckBox={(e) => handleTodoCheckBoxClick(e)}/>\r\n              <Todo labelKey={\"Todo\" + index} title={title} onClickCheckBox={(e) => handleTodoCheckBoxClick(e)} onClickLabel={(e) => handleOnClickLabel(e)}/>\r\n            )\r\n            )\r\n          }          \r\n          <AddLabel title={addLabel}/>\r\n          {todones.map((title, index) => (\r\n              <Todone labelKey={\"Todone\" + index} title={title} onClickCheckBox={(e) => handleTodoneCheckBoxClick(e)} onClickLabel={(e) => handleOnDoubleClick(e)}/>\r\n            )\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n      <footer>\r\n          <h2>// My site, my rules</h2>\r\n          <div>\r\n            <p>// Tododos:<br/>\r\n            // 1. To edit ur tododo JUST click on its label.<br/>\r\n            // 2. To save any tododo JUST hit Enter button.</p>    \r\n            \r\n            <p>// Tododones:<br/>\r\n            // 1. To undodo ur tododone JUST click on checkbox.<br/>\r\n            // 2. To remove any tododone JUST click on its label.</p>     \r\n          </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}